import{_ as t,c as e,o as n,a4 as r}from"./chunks/framework.CBJIK21Q.js";const h=JSON.parse('{"title":"Guidelines","description":"","frontmatter":{},"headers":[],"relativePath":"api/Guidelines.md","filePath":"api/Guidelines.md","lastUpdated":1714759129000}'),l={name:"api/Guidelines.md"},i=r('<h1 id="guidelines" tabindex="-1">Guidelines <a class="header-anchor" href="#guidelines" aria-label="Permalink to &quot;Guidelines&quot;">​</a></h1><p>Improve the user experience with Hyperion by following these guidelines.</p><h2 id="priority-guidelines" tabindex="-1">Priority Guidelines <a class="header-anchor" href="#priority-guidelines" aria-label="Permalink to &quot;Priority Guidelines&quot;">​</a></h2><p>Please adhere to the following priority guidelines to avoid user confusion and ensure the best user experience possible:</p><p>The user expects that an effect or color should be higher in priority (lower in value) than capturing, as colors/effects are usually run intermittently.</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Priority/Range</th><th style="text-align:center;">Recommended</th><th style="text-align:center;">Comment</th></tr></thead><tbody><tr><td style="text-align:center;">Boot Effect/Color</td><td style="text-align:center;">0</td><td style="text-align:center;">-</td><td style="text-align:center;">Blocked</td></tr><tr><td style="text-align:center;">Web Configuration</td><td style="text-align:center;">1</td><td style="text-align:center;">-</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;"><strong>Remote Control</strong></td><td style="text-align:center;"><strong>2-99</strong></td><td style="text-align:center;"><strong>50</strong></td><td style="text-align:center;">Set effect/color/single image</td></tr><tr><td style="text-align:center;"><strong>Image Streaming</strong></td><td style="text-align:center;"><strong>100-199</strong></td><td style="text-align:center;"><strong>150</strong></td><td style="text-align:center;">For image streams (Flatbuffer/Protobuffer)</td></tr><tr><td style="text-align:center;">Boblight</td><td style="text-align:center;">201</td><td style="text-align:center;">-</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">USB Capture</td><td style="text-align:center;">240</td><td style="text-align:center;">-</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">Platform Capture</td><td style="text-align:center;">250</td><td style="text-align:center;">-</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">Background Effect/Color</td><td style="text-align:center;">254</td><td style="text-align:center;">-</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">Reserved</td><td style="text-align:center;">255</td><td style="text-align:center;">-</td><td style="text-align:center;"></td></tr></tbody></table>',6),d=[i];function a(s,o,c,g,y,x){return n(),e("div",null,d)}const p=t(l,[["render",a]]);export{h as __pageData,p as default};
