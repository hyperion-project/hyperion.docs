import{_ as a,c as t,o as r,as as i}from"./chunks/framework.BauQ0Br9.js";const m=JSON.parse('{"title":"TPM2.NET","description":"","frontmatter":{},"headers":[],"relativePath":"user/leddevices/network/tpm2net.md","filePath":"user/leddevices/network/tpm2net.md","lastUpdated":1759301773000}'),o={name:"user/leddevices/network/tpm2net.md"};function n(s,e,d,c,h,l){return r(),t("div",null,[...e[0]||(e[0]=[i('<h1 id="tpm2-net" tabindex="-1">TPM2.NET <a class="header-anchor" href="#tpm2-net" aria-label="Permalink to &quot;TPM2.NET&quot;">​</a></h1><p>The device streams RGB values using the TPM2.NET protocol on top of the UDP network protocol.</p><p><strong>The device is not able to detect, if the remote device is not available or failed.</strong></p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><h3 id="specific-settings" tabindex="-1">Specific Settings <a class="header-anchor" href="#specific-settings" aria-label="Permalink to &quot;Specific Settings&quot;">​</a></h3><h4 id="hostname-ip-address" tabindex="-1">Hostname/IP-address <a class="header-anchor" href="#hostname-ip-address" aria-label="Permalink to &quot;Hostname/IP-address&quot;">​</a></h4><p>Define the device&#39;s Hostname (DNS/mDNS) or IP-address (IPv4 or IPv6) you would like streaming to.</p><h4 id="port" tabindex="-1">Port <a class="header-anchor" href="#port" aria-label="Permalink to &quot;Port&quot;">​</a></h4><p>UDP port streamed to.</p><h4 id="max-packet" tabindex="-1">Max packet <a class="header-anchor" href="#max-packet" aria-label="Permalink to &quot;Max packet&quot;">​</a></h4><p>Maximum number of RGB values per UDP-Package.</p><h3 id="advanced-expert-settings" tabindex="-1">Advanced/Expert Settings <a class="header-anchor" href="#advanced-expert-settings" aria-label="Permalink to &quot;Advanced/Expert Settings&quot;">​</a></h3><h4 id="latch-time" tabindex="-1">Latch time <a class="header-anchor" href="#latch-time" aria-label="Permalink to &quot;Latch time&quot;">​</a></h4><p>Latch time is the time-frame a device requires until the next update can be processed. During that time-frame any updates done are ignored.</p>',14)])])}const u=a(o,[["render",n]]);export{m as __pageData,u as default};
