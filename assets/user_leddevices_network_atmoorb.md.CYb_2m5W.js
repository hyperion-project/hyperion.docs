import{_ as a,c as t,o,as as r}from"./chunks/framework.CquQrE-Y.js";const m=JSON.parse('{"title":"AtmoOrb","description":"","frontmatter":{},"headers":[],"relativePath":"user/leddevices/network/atmoorb.md","filePath":"user/leddevices/network/atmoorb.md","lastUpdated":1751475924000}'),i={name:"user/leddevices/network/atmoorb.md"};function s(n,e,d,l,h,c){return o(),t("div",null,e[0]||(e[0]=[r('<h1 id="atmoorb" tabindex="-1">AtmoOrb <a class="header-anchor" href="#atmoorb" aria-label="Permalink to &quot;AtmoOrb&quot;">​</a></h1><p>The device streams a set of RGB values to one or many AtmoOrb devices (aka Orbs) over UDP multicast.</p><p><strong>The device is not able to be detected, if the remote device is not available or failed.</strong></p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><h3 id="specific-settings" tabindex="-1">Specific Settings <a class="header-anchor" href="#specific-settings" aria-label="Permalink to &quot;Specific Settings&quot;">​</a></h3><h4 id="orb-ids" tabindex="-1">Orb-IDs <a class="header-anchor" href="#orb-ids" aria-label="Permalink to &quot;Orb-IDs&quot;">​</a></h4><p>Comma separated list of all your Orbs, in example we only use a single id</p><h4 id="use-orb-smoothing" tabindex="-1">Use Orb Smoothing <a class="header-anchor" href="#use-orb-smoothing" aria-label="Permalink to &quot;Use Orb Smoothing&quot;">​</a></h4><p>Use Orbs own (external) smoothing algorithm when true, disable Hyperion smoothing to avoid double smoothing once set.</p><h4 id="multicast-group" tabindex="-1">Multicast group <a class="header-anchor" href="#multicast-group" aria-label="Permalink to &quot;Multicast group&quot;">​</a></h4><p>Your Orb multicast group IP address, should match that of your Orb</p><h4 id="port" tabindex="-1">Port <a class="header-anchor" href="#port" aria-label="Permalink to &quot;Port&quot;">​</a></h4><p>Default multicast port, should match that of your Orb</p><h3 id="advanced-expert-settings" tabindex="-1">Advanced/Expert Settings <a class="header-anchor" href="#advanced-expert-settings" aria-label="Permalink to &quot;Advanced/Expert Settings&quot;">​</a></h3><h4 id="latch-time" tabindex="-1">Latch time <a class="header-anchor" href="#latch-time" aria-label="Permalink to &quot;Latch time&quot;">​</a></h4><p>Latch time is the time-frame a device requires until the next update can be processed. During that time-frame any updates done are ignored.</p>',16)]))}const b=a(i,[["render",s]]);export{m as __pageData,b as default};
