(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{354:function(e,t,s){"use strict";s.r(t);var n=s(12),a=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"hyperbian"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hyperbian"}},[e._v("#")]),e._v(" HyperBian")]),e._v(" "),t("p",[e._v('Ist ein einsatzbereites (Ready-to-use) Image für Deinen Raspberry Pi. Es basiert auf dem originalen Raspberry Pi Foundation Image "Raspberry Pi OS Lite". Hyperion ist bereits vorinstalliert. Einfacher geht es nicht.')]),e._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"https://github.com/Hyperion-Project/HyperBian/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("Herunterladen"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("Image auf SD brennen")]),e._v(" "),t("li",[e._v("Raspberry Pi einschalten")]),e._v(" "),t("li",[e._v("Zum Konfigurieren mit Deinem Browser die Adresse "),t("code",[e._v("http://IpAdresseDeinesRPi:8090")]),e._v(" aufrufen")])]),e._v(" "),t("h2",{attrs:{id:"anforderungen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#anforderungen"}},[e._v("#")]),e._v(" Anforderungen")]),e._v(" "),t("ul",[t("li",[e._v("SD-Karte mit mindestens 4 GB Größe")]),e._v(" "),t("li",[e._v("Raspberry Pi")]),e._v(" "),t("li",[e._v("Linux/Mac/Windows + SD Kartenleser/-schreiber")])]),e._v(" "),t("h2",{attrs:{id:"installation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),t("ol",[t("li",[e._v("Lade das fertige "),t("a",{attrs:{href:"https://github.com/Hyperion-Project/HyperBian/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("HyperBian Image"),t("OutboundLink")],1),e._v(" herunter")]),e._v(" "),t("li",[e._v("Installiere den "),t("a",{attrs:{href:"https://www.raspberrypi.com/documentation/computers/getting-started.html#raspberry-pi-imager",target:"_blank",rel:"noopener noreferrer"}},[e._v("Raspberry Pi Imager"),t("OutboundLink")],1),e._v(", um das Image auf eine SD-Karte zu brennen.")]),e._v(" "),t("li",[e._v("Starte den Pi Imager")]),e._v(" "),t("li",[e._v('Wähle als Betriebssystem "Custom OS" und wähle das heruntergeladene HyperBian-XXXX-Paket aus')]),e._v(" "),t("li",[e._v("Wähle das Ziel, d.h. die SD-Karte")]),e._v(" "),t("li",[e._v('Klicken auf "Next" und wähle "No" für keine zusätzlichen Anpassungen')]),e._v(" "),t("li",[e._v("Das HyperBian-Image sollte nun auf die SD-Karte geschrieben werden")]),e._v(" "),t("li",[e._v("Stecke die SD-Karte in den Raspberry Pi und starte das System")])]),e._v(" "),t("h3",{attrs:{id:"wifi-zeitzone-ssh-zugang"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wifi-zeitzone-ssh-zugang"}},[e._v("#")]),e._v(" WiFi, Zeitzone & ssh-Zugang")]),e._v(" "),t("p",[e._v('Falls der Raspberry Pi mit WLAN genutzt werden soll oder die Zeitzone bzw. andere OS-bezogene Konfigurationen aktualisiert werden sollen, kann das Pi Imager OS-Customization Menü verwendet werden.\nIm Installationsschritt 6. wähle "Edit Settings" und gib dann z.B. die WLAN SSID, das Passwort und das Land an.\nSichere die die Einstellungen mit "Save" und fahre mit "Yes" fort, um den Imager-Prozess zu starten.')]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Verwenden den Standardbenutzer (und das Passwort) von HyperBian, falls diese angegeben werden müssen.")]),e._v(" "),t("ul",[t("li",[e._v("Benutzer: "),t("code",[e._v("hyperion")])]),e._v(" "),t("li",[e._v("Kennwort: "),t("code",[e._v("ambientlight")])])]),e._v(" "),t("p",[e._v("Es kann auch ein anderer Benutzernamen gewählt werden, allerdings muss dann der vorkonfigurierte Dienst von Hyperion später aktualisieren werden-\nAktualisierung des Dienstes auf den "),t("RouterLink",{attrs:{to:"/de/user/Installation.html#andern-des-benutzer-des-dienstes-auf-den-aktuellen-benutzer"}},[e._v("aktuellen Benutzer")])],1)]),e._v(" "),t("p",[e._v("Die Konfiguration wird während des ersten Starts durchgeführt.")]),e._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[e._v("Alternative Methode")]),e._v(" "),t("p",[e._v("Falls der PI Imager nicht verwende wird oder die Details nicht das OS-Customization Menü angegeben werden sollen,\nkann man die Einrichtung auch per Datei vornehmen.")]),e._v(" "),t("p",[e._v("Erstelle eine Datei namens "),t("code",[e._v("custom.toml")]),e._v(".\nPasse die Datei mit den gewünschten Einstellungen an. Kommentiere alle die Elemente aus, die nicht geändert werden sollen.")]),e._v(" "),t("p",[e._v("Speicher die Datei in der Boot Partion der SD-Karte.")]),e._v(" "),t("p",[t("strong",[e._v("Beispiel - custom.toml")])]),e._v(" "),t("div",{staticClass:"language-toml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-toml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Required:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("config_version")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token table class-name"}},[e._v("system")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("hostname")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"HyperBian"')]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token table class-name"}},[e._v("user")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("name")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"hyperion"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# The password can be encrypted or plain. To encrypt, we can use "openssl passwd -5 raspberry"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("password")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"ambientlight"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("password_encrypted")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token table class-name"}},[e._v("ssh")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# ssh_import_id = "gh:user" # import public keys from github')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("enabled")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("password_authentication")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# We can also seed the ssh public keys configured for the default user:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# authorized_keys = [ "ssh-rsa ... user@host", ... ]')]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token table class-name"}},[e._v("wlan")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("ssid")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"myWifi"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("password")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"myWifiPassword"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("password_encrypted")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("hidden")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The country is written to /etc/default/crda")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Reference: https://wireless.wiki.kernel.org/en/developers/Regulatory")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("country")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"DE"')]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token table class-name"}},[e._v("locale")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("keymap")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"de"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[e._v("timezone")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Europe/Berlin"')]),e._v("\n")])])])]),e._v(" "),t("h4",{attrs:{id:"standard-ssh-login"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#standard-ssh-login"}},[e._v("#")]),e._v(" Standard SSH LOGIN")]),e._v(" "),t("ul",[t("li",[e._v("Benutzername: "),t("code",[e._v("hyperion")])]),e._v(" "),t("li",[e._v("Passwort: "),t("code",[e._v("ambientlight")])])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("HyperBian wird mit einer englischen Tastatur-Konfiguration ausgeliefert. Dort sind die Zeichen 'y' und 'z' vertauscht. Für den Benutzernamen musst Du also zuerstmal "),t("code",[e._v("hzperion")]),e._v(" tippen; danach kannst Du das Tataturlayout per "),t("code",[e._v("sudo raspi-config")]),e._v(" ändern.")])])])}),[],!1,null,null,null);t.default=a.exports}}]);