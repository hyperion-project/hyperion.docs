(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{361:function(e,t,n){"use strict";n.r(t);var s=n(12),i=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"testen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#testen"}},[e._v("#")]),e._v(" Testen")]),e._v(" "),t("h2",{attrs:{id:"pull-requests"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pull-requests"}},[e._v("#")]),e._v(" Pull Requests")]),e._v(" "),t("p",[e._v("Falls Du eine in Entwicklung befindliche Version testen möchtest oder darum gebeten wurdest.")]),e._v(" "),t("h3",{attrs:{id:"linux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[e._v("#")]),e._v(" Linux")]),e._v(" "),t("p",[e._v("Pull Requests (PRs) können in sich geschlossen getestet werden, ohne eine aktuelle Hyperion-Installation zu beeinträchtigen.")]),e._v(" "),t("ol",{attrs:{start:"0"}},[t("li",[t("p",[e._v("Erstelle einen GitHub-Benutzer, falls Du noch keine hast und fahre dann mit dem nächsten Schritt fort")])]),e._v(" "),t("li",[t("p",[e._v("Erstelle einen persönlichen Zugangs-Token für Deinen GitHub-Benutzer.")]),e._v(" "),t("p",[e._v("Gehe zur "),t("a",{attrs:{href:"https://github.com/settings/tokens?type=beta",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fine-grained personal access tokens site"),t("OutboundLink")],1),e._v(' und führe ein "Generate new token" aus:')]),e._v(" "),t("p",[e._v("a. Gib dem Token einen Namen")]),e._v(" "),t("p",[e._v('b. Wähle "All Repositories".')]),e._v(" "),t("p",[e._v('c. Definiere unter "Permissions/Repository permissions", den Read-Only Access für "Actions"')]),e._v(" "),t("p",[e._v('d. Wähle "Generate token"')])]),e._v(" "),t("li",[t("p",[e._v("Kopiere das neu generierte Token in die Zwischenablage")])]),e._v(" "),t("li",[t("p",[e._v("Melde Dich auf Deinem Linux-System an, z.B. per ssh an HyperBian auf Deinem Raspberry Pi")])]),e._v(" "),t("li",[t("p",[e._v("Führe das install_pr Skript aus und ersetze dabei "),t("em",[e._v("Zugangstoken")]),e._v(" durch das in 2. kopierte Token und "),t("em",[e._v("PRID")]),e._v(" durch die PR-Nummer")]),e._v(" "),t("p",[t("code",[e._v("wget -qO- https://raw.githubusercontent.com/hyperion-project/hyperion.ng/master/bin/scripts/install_pr.sh | bash -s -- -t Zugangstoken PRID")])])]),e._v(" "),t("li",[t("p",[e._v("Starte das erzeugte Ausführungsskript, um Hyperion unter dem aktuellen Benutzer zu starten; ersetze "),t("em",[e._v("PRID")]),e._v(" durch die PR-Nummer")]),e._v(" "),t("p",[t("code",[e._v("./hyperion_prPRID/PRID_.sh")])])]),e._v(" "),t("li",[t("p",[e._v("Teste den Inhalt des Pull Request und gibt Feedback zum PR.")])]),e._v(" "),t("li",[t("p",[e._v("Entfernen die installierte Version für den angegebenen PR")])])]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Anmerkung")])]),e._v("\nDas Skript wird den aktuellen Hyperion-Dienst vor der Ausführung anhalten.\nNachdem Du Deine Tests ausgeführt hast, solltest Du den Dienst erneut starten oder einfach neu booten, um den Dienst automatisch zu starten.\nErsetze "),t("em",[e._v("USER")]),e._v(" durch den Benutzernamen, mit dem Hyperion läuft.")]),e._v(" "),t("p",[t("code",[e._v("systemctl start hyperion@USER.service")])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Teste einen PR mit der aktuellen Konfiguration")]),e._v(" "),t("p",[e._v("Falls Du mit einer aktuellen Konfiguration testen möchtest, gibt den Speicherort der Konfiguration mit der Option "),t("code",[e._v("-c")]),e._v(" an.\nDie Konfiguration wird kopiert, um Nebenwirkungen auf Dein aktuelles Setup zu vermeiden,\nd.h. alle Aktualisierungen der Konfiguration beim Testen des PR werden auch nicht in der aktuellen Konfiguration berücksichtigt.")])]),e._v(" "),t("h4",{attrs:{id:"beispiel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#beispiel"}},[e._v("#")]),e._v(" Beispiel")]),e._v(" "),t("p",[e._v("Aktueller Benutzer, Pull Request #1649 und Verwendung der aktuellen Konfiguration")]),e._v(" "),t("p",[t("code",[e._v("wget -qO- https://raw.githubusercontent.com/hyperion-project/hyperion.ng/master/bin/scripts/install_pr.sh | bash -s -- -t Zugangstoken -c ~/.hyperion 1649")])]),e._v(" "),t("h3",{attrs:{id:"windows-macos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#windows-macos"}},[e._v("#")]),e._v(" Windows, macOS")]),e._v(" "),t("p",[e._v("Lade ein Windows- oder macOS-Installationspaket herunter, das mit dem letzten PR-Build erstellt wurde.\nDie Artefakte können unter dem Pull Request selbst gefunden werden.")]),e._v(" "),t("h2",{attrs:{id:"nachtliche-builds"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nachtliche-builds"}},[e._v("#")]),e._v(" Nächtliche Builds")]),e._v(" "),t("p",[e._v("Die Hyperion Projekt "),t("a",{attrs:{href:"https://releases.hyperion-project.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Repository Seite"),t("OutboundLink")],1),e._v(' bietet Installationsanweisungen auf Knopfdruck.\nWähle einfach "Nightly Builds", um die entsprechenden Installationsanweisungen zu erhalten.')]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("Du musst zuerst eine bestehende Installation deinstallieren.")])])])}),[],!1,null,null,null);t.default=i.exports}}]);