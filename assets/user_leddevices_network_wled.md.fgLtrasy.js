import{_ as t,c as a,o as s,as as r}from"./chunks/framework.CquQrE-Y.js";const p=JSON.parse('{"title":"WLED","description":"","frontmatter":{},"headers":[],"relativePath":"user/leddevices/network/wled.md","filePath":"user/leddevices/network/wled.md","lastUpdated":1751475924000}'),i={name:"user/leddevices/network/wled.md"};function o(n,e,d,l,c,h){return s(),a("div",null,e[0]||(e[0]=[r('<h1 id="wled" tabindex="-1">WLED <a class="header-anchor" href="#wled" aria-label="Permalink to &quot;WLED&quot;">​</a></h1><p><a href="https://kno.wled.ge/" target="_blank" rel="noreferrer">WLED</a> allows to address various LED types via WIFI, Ethernet or Serial connectivity leveraging ESP8266/ESP32 devices. The device actively controls WLED (switch on/off), as well as allows to store/restore the devices state before streaming LED updates.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><h3 id="connectivity" tabindex="-1">Connectivity <a class="header-anchor" href="#connectivity" aria-label="Permalink to &quot;Connectivity&quot;">​</a></h3><p>WLED devices are discovered automatically by Hyperion.</p><p>In case no device was discovered, you can restart the discovery process by refreshing the browser&#39;s page (F5).</p><p>The device will store the respective mDNS service name, i.e. no static IP-adresses are required to be configured in your router. Use WLED&#39;s WIFI setup to configure a service name (<code>mDNS address</code>) of your choice.</p><div class="tip custom-block"><p class="custom-block-title">Custom hostname configuration</p><p>You can still configure a custom Hostname, an IPv4- or IPv6-address of your WLED device.</p></div><details class="details custom-block"><summary>Streaming protocol</summary><p>Per Hyperion 2.0.13, the Hyperion-WLED device makes use of the Distributed Display Protocol (Requires WLED v0.11.0+).</p><p>As a fall-back option the UDP-Raw protocol (<a href="/user/leddevices/network/udpraw.html">limitations</a>) is still supported, too.</p></details><h3 id="specific-settings" tabindex="-1">Specific Settings <a class="header-anchor" href="#specific-settings" aria-label="Permalink to &quot;Specific Settings&quot;">​</a></h3><h4 id="devices-discovered" tabindex="-1">Devices Discovered <a class="header-anchor" href="#devices-discovered" aria-label="Permalink to &quot;Devices Discovered&quot;">​</a></h4><p>Select your WLED LED-Device discovered or provide a custome configuration (see Hostname/IP-address).</p><h4 id="hostname-ip-address" tabindex="-1">Hostname/IP-address <a class="header-anchor" href="#hostname-ip-address" aria-label="Permalink to &quot;Hostname/IP-address&quot;">​</a></h4><p>Define the WLED device&#39;s Hostname (DNS/mDNS) or IP-address (IPv4) you would like streaming to.</p><h4 id="wled-segment-streaming" tabindex="-1">WLED Segment streaming <a class="header-anchor" href="#wled-segment-streaming" aria-label="Permalink to &quot;WLED Segment streaming&quot;">​</a></h4><p>By default Hyperion streams to all WLED LEDs independent from segment setup in WLED. Hyperion allows streaming to one WLED segment, if segment streaming is activated (requires WLED 0.13.3+).<br> To allow segment streaming, enable &quot;Realtime - Use main segment only&quot; in WLED&#39;s Sync Interfaces setup screen.</p><p>In Hyperion you can then select the individual segment to be streamed to.<br> You can define, if Hyperion will switch off the other segments while streaming or not.</p><h4 id="restore-lights-state" tabindex="-1">Restore lights&#39; state <a class="header-anchor" href="#restore-lights-state" aria-label="Permalink to &quot;Restore lights&#39; state&quot;">​</a></h4><p>The state of the WLED device (including the current on/off state) is saved before streaming. When streaming stops, the output state is restored.</p><h4 id="stay-on-after-streaming" tabindex="-1">Stay on after streaming <a class="header-anchor" href="#stay-on-after-streaming" aria-label="Permalink to &quot;Stay on after streaming&quot;">​</a></h4><p>Allow to keep WLED powered on after streaming and restoring state.</p><h3 id="advanced-expert-settings" tabindex="-1">Advanced/Expert Settings <a class="header-anchor" href="#advanced-expert-settings" aria-label="Permalink to &quot;Advanced/Expert Settings&quot;">​</a></h3><h4 id="streaming-protocol" tabindex="-1">Streaming protocol <a class="header-anchor" href="#streaming-protocol" aria-label="Permalink to &quot;Streaming protocol&quot;">​</a></h4><ul><li><a href="/user/leddevices/network/udpddp.html">UDP DDP</a></li><li><a href="/user/leddevices/network/udpraw.html">UDP RAW</a></li></ul><h4 id="disable-synchronisation" tabindex="-1">Disable synchronisation <a class="header-anchor" href="#disable-synchronisation" aria-label="Permalink to &quot;Disable synchronisation&quot;">​</a></h4><p>Disable <a href="https://kno.wled.ge/interfaces/udp-notifier/" target="_blank" rel="noreferrer">WLED&#39;s synchronisation</a> with other WLED devices before streaming starts. Synchronisation is restored when streaming stops.</p><h4 id="overwrite-brightness" tabindex="-1">Overwrite brightness <a class="header-anchor" href="#overwrite-brightness" aria-label="Permalink to &quot;Overwrite brightness&quot;">​</a></h4><p>Hyperion uses the brightness set in WLED, i.e. if the brightness in WLED is set to 10%, the LEDs will shine with maximum 10% brightness. You can override the default brightness of WLED during streaming by defining the brightness.</p><h4 id="brightness" tabindex="-1">Brightness <a class="header-anchor" href="#brightness" aria-label="Permalink to &quot;Brightness&quot;">​</a></h4><p>The brightness level used when &quot;Overwrite brightness&quot; is enabled.</p>',30)]))}const m=t(i,[["render",o]]);export{p as __pageData,m as default};
